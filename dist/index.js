"use strict";var K=Object.create;var C=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty;var J=(t,o,n,a)=>{if(o&&typeof o=="object"||typeof o=="function")for(let s of $(o))!F.call(t,s)&&s!==n&&C(t,s,{get:()=>o[s],enumerable:!(a=W(o,s))||a.enumerable});return t};var V=(t,o,n)=>(n=t!=null?K(q(t)):{},J(o||!t||!t.__esModule?C(n,"default",{value:t,enumerable:!0}):n,t));var p={translate_en:"translate_en",translate_kr:"translate_kr",translate_cn:"translate_cn",translate_fr:"translate_fr",translate_ja:"translate_ja"},f=Object.values(p),c={translate_en:"tl_open_en",translate_kr:"tl_open_kr",translate_cn:"tl_open_cn",translate_fr:"tl_open_fr",translate_ja:"tl_open_ja"},g=Object.values(c),r={translate_en:"\u{1F1FA}\u{1F1F8}",translate_kr:"\u{1F1F0}\u{1F1F7}",translate_cn:"\u{1F1E8}\u{1F1F3}",translate_fr:"\u{1F1EB}\u{1F1F7}",translate_ja:"\u{1F1EF}\u{1F1F5}"},I={translate_en:"en",translate_kr:"ko",translate_cn:"zh-CN",translate_fr:"fr",translate_ja:"ja"},S={tl_open_en:"en",tl_open_kr:"ko",tl_open_cn:"zh-CN",tl_open_fr:"fr",tl_open_ja:"ja"},b={id:"id","en-US":"en","en-GB":"en",bg:"bg","zh-CN":"zh-CN","zh-TW":"zh-TW",hr:"hr",cs:"cs",da:"da",nl:"ml",fi:"fi",fr:"fr",de:"de",el:"el",hi:"hi",hu:"hu",it:"it",ja:"ja",ko:"ko",lt:"lt",no:"no",pl:"pl","pt-BR":"pt-BR",ro:"ro",ru:"ru","es-ES":"es","sv-SE":"sv",th:"th",tr:"tr",uk:"uk",vi:"vi"};var h=require("@discordjs/rest"),L=require("@discordjs/ws"),e=require("@discordjs/core");var A=require("dotenv");(0,A.config)();var T=["DISCORD_CLIENT_ID","DISCORD_TOKEN"];for(let t in T)if(!(t in T))throw new Error(`Env Var: {${t}} not found`);var d=process.env,H=require("translate-google-api"),i=H;var y=require("@discordjs/core");var _=require("@discordjs/core");var D={type:_.ComponentType.Button,custom_id:p.translate_en,style:_.ButtonStyle.Secondary,label:r.translate_en},O={type:_.ComponentType.Button,custom_id:p.translate_kr,style:_.ButtonStyle.Secondary,label:r.translate_kr},N={type:_.ComponentType.Button,custom_id:p.translate_cn,style:_.ButtonStyle.Secondary,label:r.translate_cn},x={type:_.ComponentType.Button,custom_id:p.translate_fr,style:_.ButtonStyle.Secondary,label:r.translate_fr},R={type:_.ComponentType.Button,custom_id:p.translate_ja,style:_.ButtonStyle.Secondary,label:r.translate_ja};var l=require("@discordjs/core");var k={type:l.ComponentType.Button,custom_id:c.translate_en,style:l.ButtonStyle.Secondary,label:r.translate_en},M={type:l.ComponentType.Button,custom_id:c.translate_kr,style:l.ButtonStyle.Secondary,label:r.translate_kr},v={type:l.ComponentType.Button,custom_id:c.translate_cn,style:l.ButtonStyle.Secondary,label:r.translate_cn},w={type:l.ComponentType.Button,custom_id:c.translate_fr,style:l.ButtonStyle.Secondary,label:r.translate_fr},B={type:l.ComponentType.Button,custom_id:c.translate_ja,style:l.ButtonStyle.Secondary,label:r.translate_ja};var P={type:y.ComponentType.ActionRow,components:[D,O,N,R,x]},E={type:y.ComponentType.ActionRow,components:[k,M,v,B,w]};var j=V(require("http")),G=j.default.createServer((t,o)=>{o.write("Bot is running"),o.end()});var U=new h.REST({version:"10"}).setToken(d.DISCORD_TOKEN),z=new L.WebSocketManager({token:d.DISCORD_TOKEN,intents:e.GatewayIntentBits.MessageContent|e.GatewayIntentBits.GuildMessages|e.GatewayIntentBits.DirectMessages|e.GatewayIntentBits.GuildWebhooks|e.GatewayIntentBits.GuildMembers,rest:U}),m=new e.Client({rest:U,gateway:z});m.api.applicationCommands.createGlobalCommand(process.env.DISCORD_CLIENT_ID,{name:"Translate Text",type:e.ApplicationCommandType.Message});m.api.applicationCommands.createGlobalCommand(process.env.DISCORD_CLIENT_ID,{name:"Translate to Locale",type:e.ApplicationCommandType.Message});m.api.applicationCommands.createGlobalCommand(process.env.DISCORD_CLIENT_ID,{name:"Open Translation",type:e.ApplicationCommandType.Message});m.on(e.GatewayDispatchEvents.InteractionCreate,async({data:t,api:o})=>{if(t.type===e.InteractionType.ApplicationCommand&&t.data.name==="Translate Text"){if(t.data.type!==e.ApplicationCommandType.Message)return;let n=t.data.resolved,a=t.data.target_id;console.log("user:",t.locale??t.user);let s=n.messages[a].content;await o.interactions.reply(t.id,t.token,{flags:e.MessageFlags.Ephemeral,components:[P],embeds:[{title:"Translate text to a language",description:s,color:1}]})}if(t.type===e.InteractionType.MessageComponent){if(t.message.type===e.MessageType.ContextMenuCommand&&f.includes(t.data.custom_id)){let n=t.message.embeds[0].description,a=t.data.custom_id,s=await i(n,{to:I[a]});await o.interactions.reply(t.id,t.token,{content:s[0],flags:e.MessageFlags.Ephemeral})}if(t.message.type===e.MessageType.ContextMenuCommand&&g.includes(t.data.custom_id)){let n=t.message.embeds[0].description,a=t.data.custom_id,s=await i(n,{to:S[a]});await o.interactions.reply(t.id,t.token,{embeds:[{title:"Translation",description:`From: ${n}
To: ${s[0]}`}]}),await o.interactions.deleteReply(d.DISCORD_CLIENT_ID,t.id)}}if(t.type===e.InteractionType.ApplicationCommand&&t.data.name==="Translate to Locale"){if(t.data.type!==e.ApplicationCommandType.Message)return;let n=t.data.resolved,a=t.data.target_id,s=n.messages[a].content,u=await i(s,{to:b[t.locale]});await o.interactions.reply(t.id,t.token,{flags:e.MessageFlags.Ephemeral,content:u[0]})}if(t.type===e.InteractionType.ApplicationCommand&&t.data.name==="Open Translation"){if(t.data.type!==e.ApplicationCommandType.Message)return;let n=t.data.resolved,a=t.data.target_id,u=n.messages[a].content;await o.interactions.reply(t.id,t.token,{components:[E],embeds:[{title:"Translate text to a language",description:u,color:1}]})}});m.once(e.GatewayDispatchEvents.Ready,()=>{G.listen(process.env.PORT??8080),console.log("Ready!")});z.connect();
