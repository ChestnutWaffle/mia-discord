"use strict";var l={translate_en:"translate_en",translate_kr:"translate_kr",translate_cn:"translate_cn",translate_fr:"translate_fr",translate_ja:"translate_ja"},f=Object.values(l),p={translate_en:"tl_open_en",translate_kr:"tl_open_kr",translate_cn:"tl_open_cn",translate_fr:"tl_open_fr",translate_ja:"tl_open_ja"},g=Object.values(p),o={translate_en:"\u{1F1FA}\u{1F1F8}",translate_kr:"\u{1F1F0}\u{1F1F7}",translate_cn:"\u{1F1E8}\u{1F1F3}",translate_fr:"\u{1F1EB}\u{1F1F7}",translate_ja:"\u{1F1EF}\u{1F1F5}"},I={translate_en:"en",translate_kr:"ko",translate_cn:"zh-CN",translate_fr:"fr",translate_ja:"ja"},S={tl_open_en:"en",tl_open_kr:"ko",tl_open_cn:"zh-CN",tl_open_fr:"fr",tl_open_ja:"ja"},b={id:"id","en-US":"en","en-GB":"en",bg:"bg","zh-CN":"zh-CN","zh-TW":"zh-TW",hr:"hr",cs:"cs",da:"da",nl:"ml",fi:"fi",fr:"fr",de:"de",el:"el",hi:"hi",hu:"hu",it:"it",ja:"ja",ko:"ko",lt:"lt",no:"no",pl:"pl","pt-BR":"pt-BR",ro:"ro",ru:"ru","es-ES":"es","sv-SE":"sv",th:"th",tr:"tr",uk:"uk",vi:"vi"};var j=require("@discordjs/rest"),G=require("@discordjs/ws"),e=require("@discordjs/core");var A=require("dotenv");(0,A.config)();var T=["DISCORD_CLIENT_ID","DISCORD_TOKEN"];for(let t in T)if(!(t in T))throw new Error(`Env Var: {${t}} not found`);var m=process.env,h=require("translate-google-api"),i=h;var C=require("@discordjs/core");var n=require("@discordjs/core");var D={type:n.ComponentType.Button,custom_id:l.translate_en,style:n.ButtonStyle.Secondary,label:o.translate_en},O={type:n.ComponentType.Button,custom_id:l.translate_kr,style:n.ButtonStyle.Secondary,label:o.translate_kr},N={type:n.ComponentType.Button,custom_id:l.translate_cn,style:n.ButtonStyle.Secondary,label:o.translate_cn},R={type:n.ComponentType.Button,custom_id:l.translate_fr,style:n.ButtonStyle.Secondary,label:o.translate_fr},x={type:n.ComponentType.Button,custom_id:l.translate_ja,style:n.ButtonStyle.Secondary,label:o.translate_ja};var a=require("@discordjs/core");var k={type:a.ComponentType.Button,custom_id:p.translate_en,style:a.ButtonStyle.Secondary,label:o.translate_en},M={type:a.ComponentType.Button,custom_id:p.translate_kr,style:a.ButtonStyle.Secondary,label:o.translate_kr},w={type:a.ComponentType.Button,custom_id:p.translate_cn,style:a.ButtonStyle.Secondary,label:o.translate_cn},B={type:a.ComponentType.Button,custom_id:p.translate_fr,style:a.ButtonStyle.Secondary,label:o.translate_fr},E={type:a.ComponentType.Button,custom_id:p.translate_ja,style:a.ButtonStyle.Secondary,label:o.translate_ja};var v={type:C.ComponentType.ActionRow,components:[D,O,N,x,R]},P={type:C.ComponentType.ActionRow,components:[k,M,w,E,B]};var y=new j.REST({version:"10"}).setToken(m.DISCORD_TOKEN);y.delete(e.Routes.applicationCommand(m.DISCORD_CLIENT_ID,"1166749710695010429")).then(()=>console.log("successfully delete command 1166749710695010429"));var L=new G.WebSocketManager({token:m.DISCORD_TOKEN,intents:e.GatewayIntentBits.MessageContent|e.GatewayIntentBits.GuildMessages|e.GatewayIntentBits.DirectMessages|e.GatewayIntentBits.GuildWebhooks|e.GatewayIntentBits.GuildMembers,rest:y}),d=new e.Client({rest:y,gateway:L});d.api.applicationCommands.createGlobalCommand(process.env.DISCORD_CLIENT_ID,{name:"Translate Text",type:e.ApplicationCommandType.Message});d.api.applicationCommands.createGlobalCommand(process.env.DISCORD_CLIENT_ID,{name:"Translate to Locale",type:e.ApplicationCommandType.Message});d.api.applicationCommands.createGlobalCommand(process.env.DISCORD_CLIENT_ID,{name:"Open Translation",type:e.ApplicationCommandType.Message});d.on(e.GatewayDispatchEvents.InteractionCreate,async({data:t,api:c})=>{if(t.type===e.InteractionType.ApplicationCommand&&t.data.name==="Translate Text"){if(t.data.type!==e.ApplicationCommandType.Message)return;let s=t.data.resolved,r=t.data.target_id;console.log("user:",t.locale??t.user);let _=s.messages[r].content;await c.interactions.reply(t.id,t.token,{flags:e.MessageFlags.Ephemeral,components:[v],embeds:[{title:"Translate text to a language",description:_,color:1}]})}if(t.type===e.InteractionType.MessageComponent){if(t.message.type===e.MessageType.ContextMenuCommand&&f.includes(t.data.custom_id)){let s=t.message.embeds[0].description,r=t.data.custom_id,_=await i(s,{to:I[r]});await c.interactions.reply(t.id,t.token,{content:_[0],flags:e.MessageFlags.Ephemeral})}if(t.message.type===e.MessageType.ContextMenuCommand&&g.includes(t.data.custom_id)){let s=t.message.embeds[0].description,r=t.data.custom_id,_=await i(s,{to:S[r]});await c.interactions.reply(t.id,t.token,{embeds:[{title:"Translation",description:`From: ${s}
To: ${_[0]}`}]}),await c.interactions.deleteReply(m.DISCORD_CLIENT_ID,t.id)}}if(t.type===e.InteractionType.ApplicationCommand&&t.data.name==="Translate to Locale"){if(t.data.type!==e.ApplicationCommandType.Message)return;let s=t.data.resolved,r=t.data.target_id,_=s.messages[r].content,u=await i(_,{to:b[t.locale]});await c.interactions.reply(t.id,t.token,{flags:e.MessageFlags.Ephemeral,content:u[0]})}if(t.type===e.InteractionType.ApplicationCommand&&t.data.name==="Open Translation"){if(t.data.type!==e.ApplicationCommandType.Message)return;let s=t.data.resolved,r=t.data.target_id,u=s.messages[r].content;await c.interactions.reply(t.id,t.token,{components:[P],embeds:[{title:"Translate text to a language",description:u,color:1}]})}});d.once(e.GatewayDispatchEvents.Ready,()=>console.log("Ready!"));L.connect();
